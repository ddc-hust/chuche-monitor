{"version":3,"file":"index.js","sources":["../src/core/base.ts"],"sourcesContent":["import { EVENTTYPES } from '@chuche-monitor/common';\r\nexport interface Callback { // 这里定义了一个函数类型，参数是任意数量任意类型的，返回值也是任意类型\r\n    (...args: any[]): any;\r\n}\r\n\r\n// sdk插件核心core\r\nexport interface SdkBase {\r\n    transportData: any; // 数据上报\r\n    breadcrumb: any; // 用户行为\r\n    options: any; // 公共配置\r\n    notify: any; // 发布消息\r\n}\r\n\r\nexport abstract class BasePlugin {\r\n    public type: string; // 插件类型\r\n    constructor(type: string) {\r\n        this.type = type;\r\n    }\r\n    abstract bindOptions(options: object): void; // 校验参数\r\n    abstract core(sdkBase: SdkBase): void; // 核心方法\r\n    abstract transform(data: any): void; // 数据转化\r\n}\r\n\r\nexport interface Window {\r\n    chrome: {\r\n        app: {\r\n            [key: string]: any;\r\n        };\r\n    };\r\n    history: any;\r\n    addEventListener: any;\r\n    innerWidth: any;\r\n    innerHeight: any;\r\n    onpopstate: any;\r\n    performance: any;\r\n    __chucheMonitor__: { // 不知道这个webSee是干嘛的，改成chuche-montiro?\r\n        [key: string]: any;\r\n    };\r\n}\r\n\r\nexport interface ChucheMonitor {\r\n    hasError: false; // 某段时间代码是否报错\r\n    events: string[]; // 存储录屏的信息\r\n    recordScreenId: string; // 本次录屏的id\r\n    _loopTimer: number; // 白屏循环检测的timer\r\n    transportData: any; // 数据上报\r\n    options: any; // 配置信息\r\n    replaceFlag: {\r\n        // 订阅消息\r\n        [key: string]: any;\r\n    };\r\n    deviceInfo: {\r\n        // 设备信息\r\n        [key: string]: any;\r\n    };\r\n}\r\n\r\n/**\r\n * 性能指标\r\n */\r\nexport interface PerformanceData {\r\n    name: string; // FCP\r\n    value: number; // 数值\r\n    rating: string; // 等级\r\n}\r\n\r\n/**\r\n * 上报的数据接口\r\n */\r\nexport interface ReportData\r\n    extends\r\n    PerformanceData {\r\n    type: string; // 事件类型\r\n    pageUrl: string; // 页面地址\r\n    time: number; // 发生时间\r\n    uuid: string; // 页面唯一标识\r\n    apikey: string; // 项目id\r\n    status: string; // 事件状态\r\n    sdkVersion: string; // 版本信息\r\n    //  breadcrumb?: BreadcrumbData[]; // 用户行为\r\n\r\n    // 设备信息\r\n    deviceInfo: {\r\n        browserVersion: string | number; // 版本号\r\n        browser: string; // Chrome\r\n        osVersion: string | number; // 电脑系统 10\r\n        os: string; // 设备系统\r\n        ua: string; // 设备详情\r\n        device: string; // 设备种类描述\r\n        device_type: string; // 设备种类，如pc\r\n    };\r\n}\r\n\r\n\r\nexport interface IAnyObject {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type voidFun = (...args: any[]) => void;\r\n\r\nexport interface ReplaceHandler {\r\n    type: EVENTTYPES;\r\n    callback: Callback;\r\n}\r\n\r\nexport type ReplaceCallback = (data: any) => void;"],"names":[],"mappings":";;;;;;AAaA,QAAA,UAAA,kBAAA,YAAA;IAEI,IAAA,SAAA,UAAA,CAAY,IAAY,EAAA;IACpB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACpB;QAIL,OAAC,UAAA,CAAA;IAAD,CAAC,EAAA;;;;;;;;;;"}