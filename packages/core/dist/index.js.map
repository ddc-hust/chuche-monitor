{"version":3,"file":"index.js","sources":["../../utils/src/core/verifyType.ts","../../utils/src/core/helpers.ts","../../utils/src/core/global.ts","../../common/src/core/constant.ts","../../common/src/core/config.ts","../../utils/src/core/browser.ts","../../utils/src/core/queue.ts","../../utils/src/core/exception.ts","../src/core/reportData.ts","../src/core/options.ts","../src/core/subscribe.ts","../src/core/customLog.ts","../src/core/whiteScreen.ts","../src/core/handleEvents.ts","../src/core/replace.ts","../src/core/setupReplace.ts","../src/index.ts"],"sourcesContent":["function isType(type: any) {\r\n  return function (value: any): boolean {\r\n    return Object.prototype.toString.call(value) === `[object ${type}]`;\r\n  };\r\n}\r\n/**\r\n * 检测变量类型\r\n * @param type\r\n */\r\nexport const variableTypeDetection = {\r\n  isNumber: isType('Number'),\r\n  isString: isType('String'),\r\n  isBoolean: isType('Boolean'),\r\n  isNull: isType('Null'),\r\n  isUndefined: isType('Undefined'),\r\n  isSymbol: isType('Symbol'),\r\n  isFunction: isType('Function'),\r\n  isObject: isType('Object'),\r\n  isArray: isType('Array'),\r\n  isProcess: isType('process'),\r\n  isWindow: isType('Window'),\r\n};\r\n\r\nexport function isError(error: Error): boolean {\r\n  switch (Object.prototype.toString.call(error)) {\r\n    case '[object Error]':\r\n      return true;\r\n    case '[object Exception]':\r\n      return true;\r\n    case '[object DOMException]':\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n/**\r\n * 检查是否是空对象\r\n */\r\nexport function isEmptyObject(obj: object): boolean {\r\n  return variableTypeDetection.isObject(obj) && Object.keys(obj).length === 0;\r\n}\r\nexport function isEmpty(wat: any): boolean {\r\n  return (\r\n    (variableTypeDetection.isString(wat) && wat.trim() === '') || wat === undefined || wat === null\r\n  );\r\n}\r\n\r\nexport function isExistProperty(obj: any, key: any): boolean {\r\n  return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n","import { variableTypeDetection } from './verifyType';\r\n// 获取当前的时间戳\r\nexport function getTimestamp(): number {\r\n    return Date.now();\r\n}\r\n\r\nexport function typeofAny(target: any): string { // 类型的获取，切割8到-1是因为，获取的字符串是\"[object \" 和 \"]\"这种形式的\r\n    return Object.prototype.toString.call(target).slice(8, -1).toLowerCase();\r\n}\r\n\r\n// 验证选项的类型\r\nexport function validateOption(target: any, targetName: string, expectType: string): any {\r\n    if (!target) return false;\r\n    if (typeofAny(target) === expectType) return true;\r\n    console.error(`web-see: ${targetName}期望传入${expectType}类型，目前是${typeofAny(target)}类型`);\r\n}\r\n\r\nexport function generateUUID(): string {\r\n    let d = new Date().getTime();\r\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getLocationHref(): string {\r\n    if (typeof document === 'undefined' || document.location == null) return '';\r\n    return document.location.href;\r\n}\r\n\r\nexport function unknownToString(target: unknown): string {\r\n    if (variableTypeDetection.isString(target)) {\r\n        return target as string;\r\n    }\r\n    if (variableTypeDetection.isUndefined(target)) {\r\n        return 'undefined';\r\n    }\r\n    return JSON.stringify(target);\r\n}","import { ChucheMonitor, Window } from '@chuche-monitor/types';\r\n\r\n\r\n// 获取全局变量\r\nexport function getGlobal(): Window {\r\n    return window as unknown as Window;\r\n}\r\n\r\nconst _global = getGlobal();\r\nconst _support = getGlobalSupport();\r\n\r\n_support.replaceFlag = _support.replaceFlag || {};\r\nconst replaceFlag = _support.replaceFlag;\r\n\r\nexport function setFlag(replaceType: string, isSet: boolean) { // 这个replaceType不知道是什么？，好像是事件类型\r\n    if (replaceFlag[replaceType]) return;\r\n    replaceFlag[replaceType] = isSet;\r\n}\r\nexport function getFlag(replaceType: string) {\r\n    return replaceFlag[replaceType] ? true : false;\r\n}\r\n\r\n// 获取全部变量__webSee__的引用地址，这是干啥的？？？\r\nexport function getGlobalSupport() {\r\n    _global.__chucheMonitor__ = _global.__chucheMonitor__ || ({} as ChucheMonitor);\r\n    return _global.__chucheMonitor__;\r\n}\r\nexport { _global, _support };","/**\r\n * 事件类型, 设置为枚举类型\r\n */\r\nexport enum EVENTTYPES {\r\n    PERFORMANCE = 'performance',\r\n    WHITESCREEN = 'whiteScreen',\r\n    VUE = 'vue',\r\n    REACT = 'react', // 事件类型中不知道为什么会有react和vue的区别\r\n\r\n    XHR = 'xhr',\r\n    FETCH = 'fetch',\r\n    CLICK = 'click',\r\n    HISTORY = 'history',\r\n    ERROR = 'error',\r\n    HASHCHANGE = 'hashchange',\r\n    UNHANDLEDREJECTION = 'unhandledrejection',\r\n    RESOURCE = 'resource',\r\n    DOM = 'dom',\r\n    CUSTOM = 'custom',\r\n    RECORDSCREEN = 'recordScreen',\r\n}\r\n\r\n/**\r\n * 状态， 设置为枚举类型\r\n */\r\nexport enum STATUS_CODE {\r\n    ERROR = 'error',\r\n    OK = 'ok',\r\n}","import version from '../../../core/package.json';\r\nexport const SDK_NAME = 'chuche-monitor';\r\nexport const SDK_VERSION = version.version;\r\n","import { setFlag, _support } from './global';\r\nimport { EVENTTYPES } from '@chuche-monitor/common';\r\n\r\nexport function setSilentFlag({\r\n    silentXhr = true,\r\n    silentFetch = true,\r\n    silentClick = true,\r\n    silentHistory = true,\r\n    silentError = true,\r\n    silentHashchange = true,\r\n    silentUnhandledrejection = true,\r\n    silentWhiteScreen = false,\r\n}): void {\r\n    setFlag(EVENTTYPES.XHR, !silentXhr);\r\n    setFlag(EVENTTYPES.FETCH, !silentFetch);\r\n    setFlag(EVENTTYPES.CLICK, !silentClick);\r\n    setFlag(EVENTTYPES.HISTORY, !silentHistory);\r\n    setFlag(EVENTTYPES.ERROR, !silentError);\r\n    setFlag(EVENTTYPES.HASHCHANGE, !silentHashchange);\r\n    setFlag(EVENTTYPES.UNHANDLEDREJECTION, !silentUnhandledrejection);\r\n    setFlag(EVENTTYPES.WHITESCREEN, !silentWhiteScreen);\r\n}","import { _global } from './global';\r\nimport { voidFun } from '@chuche-monitor/types';\r\n\r\nexport class Queue {\r\n    private stack: any[] = [];\r\n    private isFlushing = false;\r\n    constructor() { }\r\n    addFn(fn: voidFun): void {\r\n        if (typeof fn !== 'function') return;\r\n        if (!('requestIdleCallback' in _global || 'Promise' in _global)) {\r\n            fn();\r\n            return;\r\n        }\r\n        this.stack.push(fn);\r\n        if (!this.isFlushing) {\r\n            this.isFlushing = true;\r\n            // 优先使用requestIdleCallback\r\n            if ('requestIdleCallback' in _global) {\r\n                requestIdleCallback(() => this.flushStack());\r\n            } else {\r\n                // 其次使用微任务上报\r\n                Promise.resolve().then(() => this.flushStack());\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        this.stack = [];\r\n    }\r\n    getStack() {\r\n        return this.stack;\r\n    }\r\n    flushStack(): void {\r\n        const temp = this.stack.slice(0);\r\n        this.stack = [];\r\n        this.isFlushing = false;\r\n        for (let i = 0; i < temp.length; i++) {\r\n            temp[i]();\r\n        }\r\n    }\r\n}\r\n","/**\r\n * 原生try函数\r\n * ../param fn try中执行的函数体\r\n * ../param errorFn 报错时执行的函数体，将err传入\r\n */\r\nexport function nativeTryCatch(fn: any, errorFn?: any): void {\r\n  try {\r\n    fn();\r\n  } catch (err) {\r\n    if (errorFn) {\r\n      errorFn(err);\r\n    }\r\n  }\r\n}\r\n","import {\r\n    _support,\r\n    validateOption,\r\n    // isBrowserEnv,\r\n    Queue,\r\n    isEmpty,\r\n    getLocationHref,\r\n    generateUUID,\r\n} from '@chuche-monitor/utils';\r\nimport { SDK_VERSION, EVENTTYPES } from '@chuche-monitor/common';\r\nimport { ReportData, InitOptions } from '@chuche-monitor/types';\r\n// import { breadcrumb } from './breadcrumb';\r\n// import { options } from './options';\r\n\r\n/**\r\n * 用来上报数据，包含图片打点上报、xhr请求\r\n */\r\nexport class TransportData {\r\n    queue: Queue = new Queue(); // 消息队列\r\n    apikey = ''; // 每个项目对应的唯一标识\r\n    errorDsn = ''; // 监控上报接口的地址\r\n    userId = ''; // 用户id\r\n    uuid: string; // 每次页面加载的唯一标识\r\n    beforeDataReport: any; // 上报数据前的hook\r\n    getUserId: any; // 用户自定义获取userId的方法\r\n    useImgUpload = false; // 是否使用图片打点上报\r\n    constructor() {\r\n        this.uuid = generateUUID(); // 每次页面加载的唯一标识\r\n    }\r\n    beacon(url: string, data: any): boolean {\r\n        return navigator.sendBeacon(url, JSON.stringify(data));\r\n    }\r\n    imgRequest(data: ReportData, url: string): void {\r\n        const requestFun = () => {\r\n            const img = new Image();\r\n            const spliceStr = url.indexOf('?') === -1 ? '?' : '&';\r\n            img.src = `${url}${spliceStr}data=${encodeURIComponent(JSON.stringify(data))}`;\r\n        };\r\n        this.queue.addFn(requestFun);\r\n    }\r\n\r\n    async beforePost(this: any, data: ReportData): Promise<ReportData | boolean> {\r\n        let transportData = this.getTransportData(data);\r\n        // 配置了beforeDataReport\r\n        if (typeof this.beforeDataReport === 'function') {\r\n            transportData = this.beforeDataReport(transportData);\r\n            if (!transportData) return false;\r\n        }\r\n        return transportData;\r\n    }\r\n    async xhrPost(data: ReportData, url: string): Promise<void> {\r\n        const requestFun = () => {\r\n            fetch(`${url}`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n        };\r\n        this.queue.addFn(requestFun);\r\n    }\r\n    // 获取用户信息\r\n    getAuthInfo() {\r\n        return {\r\n            userId: this.userId || this.getAuthId() || '',\r\n            sdkVersion: SDK_VERSION,\r\n            apikey: this.apikey,\r\n        };\r\n    }\r\n    getAuthId(): string | number {\r\n        if (typeof this.getUserId === 'function') {\r\n            const id = this.getUserId();\r\n            if (typeof id === 'string' || typeof id === 'number') {\r\n                return id;\r\n            } else {\r\n                console.error(`web-see userId: ${id} 期望 string 或 number 类型，但是传入 ${typeof id}`);\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n    // 添加公共信息\r\n    // 这里不要添加时间戳，比如接口报错，发生的时间和上报时间不一致\r\n    getTransportData(data: any): ReportData {\r\n        const info = {\r\n            ...data,\r\n            ...this.getAuthInfo(), // 获取用户信息\r\n            uuid: this.uuid,\r\n            pageUrl: getLocationHref(),\r\n            deviceInfo: _support.deviceInfo, // 获取设备信息\r\n        };\r\n\r\n        // 性能数据、录屏、白屏检测等不需要附带用户行为\r\n        const excludeRreadcrumb = [\r\n            EVENTTYPES.PERFORMANCE,\r\n            EVENTTYPES.RECORDSCREEN,\r\n            EVENTTYPES.WHITESCREEN,\r\n        ];\r\n        if (!excludeRreadcrumb.includes(data.type)) {\r\n            // info.breadcrumb = breadcrumb.getStack(); // 获取用户行为栈\r\n        }\r\n        return info;\r\n    }\r\n    // 判断请求是否为SDK配置的接口\r\n    isSdkTransportUrl(targetUrl: string): boolean {\r\n        let isSdkDsn = false;\r\n        if (this.errorDsn && targetUrl.indexOf(this.errorDsn) !== -1) {\r\n            isSdkDsn = true;\r\n        }\r\n        return isSdkDsn;\r\n    }\r\n\r\n    bindOptions(options: InitOptions): void {\r\n        const { dsn, apikey, beforeDataReport, userId, getUserId, useImgUpload } = options;\r\n        validateOption(apikey, 'apikey', 'string') && (this.apikey = apikey);\r\n        validateOption(dsn, 'dsn', 'string') && (this.errorDsn = dsn);\r\n        validateOption(userId, 'userId', 'string') && (this.userId = userId || '');\r\n        validateOption(useImgUpload, 'useImgUpload', 'boolean') &&\r\n            (this.useImgUpload = useImgUpload || false);\r\n        validateOption(beforeDataReport, 'beforeDataReport', 'function') &&\r\n            (this.beforeDataReport = beforeDataReport);\r\n        validateOption(getUserId, 'getUserId', 'function') && (this.getUserId = getUserId);\r\n    }\r\n    // 上报数据\r\n    async send(data: ReportData) {\r\n        const dsn = this.errorDsn;\r\n        if (isEmpty(dsn)) {\r\n            console.error('web-see: dsn为空，没有传入监控错误上报的dsn地址，请在init中传入');\r\n            return;\r\n        }\r\n        // 开启录屏，由@websee/recordScreen 插件控制\r\n        // if (_support.options.silentRecordScreen) {\r\n        //     if (options.recordScreenTypeList.includes(data.type)) {\r\n        //         // 修改hasError\r\n        //         _support.hasError = true;\r\n        //         data.recordScreenId = _support.recordScreenId;\r\n        //     }\r\n        // }\r\n        const result = (await this.beforePost(data)) as ReportData;\r\n        // if (isBrowserEnv && result) {\r\n        //     // 优先使用sendBeacon 上报，若数据量大，再使用图片打点上报和fetch上报\r\n        //     const value = this.beacon(dsn, result);\r\n        //     if (!value) {\r\n        //         return this.useImgUpload ? this.imgRequest(result, dsn) : this.xhrPost(result, dsn);\r\n        //     }\r\n        // }\r\n        if (result) {\r\n            // 优先使用sendBeacon 上报，若数据量大，再使用图片打点上报和fetch上报\r\n            const value = this.beacon(dsn, result);\r\n            if (!value) {\r\n                return this.useImgUpload ? this.imgRequest(result, dsn) : this.xhrPost(result, dsn);\r\n            }\r\n        }\r\n    }\r\n}\r\nconst transportData = _support.transportData || (_support.transportData = new TransportData());\r\nexport { transportData };\r\n","import { validateOption, _support, setSilentFlag } from '@chuche-monitor/utils';\r\nimport { InitOptions } from '@chuche-monitor/types';\r\n// import { breadcrumb } from './breadcrumb';\r\nimport { transportData } from './reportData';\r\n\r\nexport class Options {\r\n    dsn = ''; // 监控上报接口的地址\r\n    throttleDelayTime = 0; // click事件的节流时长\r\n    overTime = 10; // 接口超时时长\r\n    whiteBoxElements: string[] = ['html', 'body', '#app', '#root']; // // 白屏检测的容器列表\r\n    silentWhiteScreen = false; // 是否开启白屏检测\r\n    skeletonProject = false; // 项目是否有骨架屏\r\n    filterXhrUrlRegExp: any; // 过滤的接口请求正则\r\n    handleHttpStatus: any; // 处理接口返回的 response\r\n    repeatCodeError = false; // 是否去除重复的代码错误，重复的错误只上报一次\r\n\r\n    constructor() { }\r\n\r\n    bindOptions(options: InitOptions): void {\r\n        const {\r\n            dsn,\r\n            filterXhrUrlRegExp,\r\n            throttleDelayTime = 0,\r\n            overTime = 10,\r\n            silentWhiteScreen = false,\r\n            whiteBoxElements = ['html', 'body', '#app', '#root'],\r\n            skeletonProject = false,\r\n            handleHttpStatus,\r\n            repeatCodeError = false,\r\n        } = options;\r\n        validateOption(dsn, 'dsn', 'string') && (this.dsn = dsn);\r\n        validateOption(throttleDelayTime, 'throttleDelayTime', 'number') &&\r\n            (this.throttleDelayTime = throttleDelayTime);\r\n        validateOption(overTime, 'overTime', 'number') && (this.overTime = overTime);\r\n        validateOption(filterXhrUrlRegExp, 'filterXhrUrlRegExp', 'regexp') &&\r\n            (this.filterXhrUrlRegExp = filterXhrUrlRegExp);\r\n        validateOption(silentWhiteScreen, 'silentWhiteScreen', 'boolean') &&\r\n            (this.silentWhiteScreen = silentWhiteScreen);\r\n        validateOption(skeletonProject, 'skeletonProject', 'boolean') &&\r\n            (this.skeletonProject = skeletonProject);\r\n        validateOption(whiteBoxElements, 'whiteBoxElements', 'array') &&\r\n            (this.whiteBoxElements = whiteBoxElements);\r\n        validateOption(handleHttpStatus, 'handleHttpStatus', 'function') &&\r\n            (this.handleHttpStatus = handleHttpStatus);\r\n        validateOption(repeatCodeError, 'repeatCodeError', 'boolean') &&\r\n            (this.repeatCodeError = repeatCodeError);\r\n    }\r\n}\r\nconst options = _support.options || (_support.options = new Options());\r\n\r\nexport function handleOptions(paramOptions: InitOptions): void {\r\n    // setSilentFlag 给全局添加已设置的标识，防止重复设置\r\n    setSilentFlag(paramOptions);\r\n    // 设置用户行为的配置项\r\n    // breadcrumb.bindOptions(paramOptions);\r\n    // transportData 配置上报的信息\r\n    transportData.bindOptions(paramOptions);\r\n    // 绑定其他配置项\r\n    options.bindOptions(paramOptions);\r\n}\r\nexport { options };\r\n","import { getFlag, nativeTryCatch, setFlag } from '@chuche-monitor/utils';\r\nimport { ReplaceHandler, ReplaceCallback } from '@chuche-monitor/types';\r\nimport { EVENTTYPES } from '@chuche-monitor/common';\r\n\r\nconst handlers: { [key in EVENTTYPES]?: ReplaceCallback[] } = {};\r\n\r\n// subscribeEvent 设置标识，并将处理的方法放置到handlers中，{ xhr: [ funtion ] }\r\nexport function subscribeEvent(handler: ReplaceHandler): boolean {\r\n  if (!handler || getFlag(handler.type)) return false;\r\n  setFlag(handler.type, true);\r\n  handlers[handler.type] = handlers[handler.type] || [];\r\n  handlers[handler.type]?.push(handler.callback);\r\n  console.log(\"订阅事件\")\r\n  return true;\r\n}\r\nexport function notify(type: EVENTTYPES, data?: any): void {\r\n  if (!type || !handlers[type]) return;\r\n  // 获取对应事件的回调函数并执行，回调函数为addReplaceHandler事件中定义的事件\r\n  console.log(\"通知事件的执行\");\r\n  handlers[type]?.forEach(callback => {\r\n    nativeTryCatch(\r\n      () => {\r\n        callback(data);\r\n      },\r\n      () => {\r\n        // console.error(\r\n        //   `web-see 重写事件notify的回调函数发生错误\\nType:${type}\\nName: ${getFunctionName(\r\n        //     callback\r\n        //   )}\\nError: ${e}`\r\n        // );\r\n      }\r\n    );\r\n  });\r\n}\r\n","import ErrorStackParser from 'error-stack-parser';\r\nimport { transportData } from './reportData';\r\n// import { breadcrumb } from './breadcrumb';\r\nimport { EVENTTYPES, STATUS_CODE } from '@chuche-monitor/common';\r\nimport { isError, getTimestamp, unknownToString } from '@chuche-monitor/utils';\r\n\r\n// 自定义上报事件\r\nexport function log({ message = 'customMsg', error = '', type = EVENTTYPES.CUSTOM }: any): void {\r\n  try {\r\n    let errorInfo = {};\r\n    if (isError(error)) {\r\n      const result = ErrorStackParser.parse(!error.target ? error : error.error || error.reason)[0];\r\n      errorInfo = { ...result, line: result.lineNumber, column: result.columnNumber };\r\n    }\r\n    // breadcrumb.push({\r\n    //   type,\r\n    //   status: STATUS_CODE.ERROR,\r\n    //   category: breadcrumb.getCategory(EVENTTYPES.CUSTOM), ''\r\n    //   data: unknownToString(message),\r\n    //   time: getTimestamp(),\r\n    // });\r\n    transportData.send({\r\n      type,\r\n      status: STATUS_CODE.ERROR,\r\n      message: unknownToString(message),\r\n      time: getTimestamp(),\r\n      ...errorInfo,\r\n    });\r\n  } catch (err) {\r\n    // console.log('上报自定义事件时报错：', err);\r\n  }\r\n}\r\n","import { STATUS_CODE } from '@chuche-monitor/common';\r\nimport { _global, _support } from '@chuche-monitor/utils';\r\nimport { Callback, InitOptions } from '@chuche-monitor/types';\r\n\r\n/**\r\n * 检测页面是否白屏\r\n * @param {function} callback - 回到函数获取检测结果\r\n * @param {boolean} skeletonProject - 页面是否有骨架屏\r\n * @param {array} whiteBoxElements - 容器列表，默认值为['html', 'body', '#app', '#root']\r\n */\r\n\r\nexport function openWhiteScreen(\r\n  callback: Callback,\r\n  { skeletonProject, whiteBoxElements }: InitOptions\r\n) {\r\n  // let _whiteLoopNum = 0;\r\n\r\n  // 项目有骨架屏\r\n  if (skeletonProject) {\r\n    if (document.readyState != 'complete') {\r\n      idleCallback();\r\n    }\r\n  } else {\r\n    // 页面加载完毕\r\n    if (document.readyState === 'complete') {\r\n      idleCallback(); // 页面加载完之后（页面和子资源加载完成，不包括动态资源）进行采样\r\n    } else {\r\n      _global.addEventListener('load', idleCallback);\r\n    }\r\n  }\r\n\r\n  // 选中dom点的名称\r\n  function getSelector(element: any) {\r\n    if (element.id) {\r\n      return '#' + element.id;\r\n    } else if (element.className) {\r\n      // div home => div.home\r\n      return (\r\n        '.' +\r\n        element.className\r\n          .split(' ')\r\n          .filter((item: any) => !!item)\r\n          .join('.')\r\n      );\r\n    } else {\r\n      return element.nodeName.toLowerCase();\r\n    }\r\n  }\r\n  // 判断采样点是否为容器节点\r\n  function isContainer(element: HTMLElement) {\r\n    const selector = getSelector(element);\r\n    // if (skeletonProject) {\r\n    //   _whiteLoopNum ? _skeletonNowList.push(selector) : _skeletonInitList.push(selector);\r\n    // }\r\n    return whiteBoxElements?.indexOf(selector) != -1;\r\n  }\r\n  // 采样对比\r\n  function sampling() {\r\n    let emptyPoints = 0;\r\n    for (let i = 1; i <= 9; i++) {\r\n      const xElements = document.elementsFromPoint(\r\n        (_global.innerWidth * i) / 10,\r\n        _global.innerHeight / 2\r\n      );\r\n      const yElements = document.elementsFromPoint(\r\n        _global.innerWidth / 2,\r\n        (_global.innerHeight * i) / 10\r\n      );\r\n      if (isContainer(xElements[0] as HTMLElement)) emptyPoints++;\r\n      // 中心点只计算一次\r\n      if (i != 5) {\r\n        if (isContainer(yElements[0] as HTMLElement)) emptyPoints++;\r\n      }\r\n    }\r\n    // console.log('_skeletonInitList', _skeletonInitList, _skeletonNowList);\r\n\r\n    // 页面正常渲染，停止轮训\r\n    if (emptyPoints != 17) {\r\n      // if (skeletonProject) {\r\n      //   // 第一次不比较\r\n      //   if (!_whiteLoopNum) return openWhiteLoop();\r\n      //   // 比较前后dom是否一致\r\n      //   if (_skeletonNowList.join() == _skeletonInitList.join())\r\n      //     return callback({\r\n      //       status: STATUS_CODE.ERROR,\r\n      //     });\r\n      // }\r\n      if (_support._loopTimer) {\r\n        clearTimeout(_support._loopTimer);\r\n        _support._loopTimer = null;\r\n      }\r\n    } else {\r\n      // 开启轮训\r\n      if (!_support._loopTimer) {\r\n        openWhiteLoop();\r\n      }\r\n    }\r\n    console.log(\"***********888888\")\r\n    console.log(emptyPoints)\r\n    // 17个点都是容器节点算作白屏\r\n    callback({\r\n      status: emptyPoints == 17 ? STATUS_CODE.ERROR : STATUS_CODE.OK,\r\n    });\r\n  }\r\n  // 开启白屏轮训\r\n  function openWhiteLoop(): void {\r\n    if (_support._loopTimer) return;\r\n    _support._loopTimer = setInterval(() => {\r\n      // if (skeletonProject) {\r\n      //   _whiteLoopNum++;\r\n      //   _skeletonNowList = [];\r\n      // }\r\n      idleCallback();\r\n    }, 1000);\r\n  }\r\n  function idleCallback() {\r\n    // if ('requestIdleCallback' in _global) {\r\n    //   requestIdleCallback(deadline => {\r\n    //     // timeRemaining：表示当前空闲时间的剩余时间\r\n    //     if (deadline.timeRemaining() > 0) {\r\n    //       sampling();\r\n    //     }\r\n    //   });\r\n    // } else {\r\n    //   sampling();\r\n    // }\r\n    sampling();\r\n  }\r\n}\r\n","// import ErrorStackParser from 'error-stack-parser';\r\nimport {\r\n  openWhiteScreen,\r\n  transportData,\r\n  // breadcrumb,\r\n  // resourceTransform,\r\n  // httpTransform,\r\n  options,\r\n} from './index';\r\nimport { EVENTTYPES } from '@chuche-monitor/common';\r\nimport {\r\n  getTimestamp,\r\n} from '@chuche-monitor/utils';\r\n// import { ErrorTarget, RouteHistory, HttpData } from '@chuche-monitor/types';\r\n\r\nconst HandleEvents = {\r\n  // 处理xhr、fetch回调\r\n  // handleHttp(data: HttpData, type: EVENTTYPES): void {\r\n  //   const result = httpTransform(data);\r\n  //   // 添加用户行为，去掉自身上报的接口行为\r\n  //   if (!data.url.includes(options.dsn)) {\r\n  //     breadcrumb.push({\r\n  //       type,\r\n  //       category: breadcrumb.getCategory(type),\r\n  //       data: result,\r\n  //       status: result.status,\r\n  //       time: data.time,\r\n  //     });\r\n  //   }\r\n\r\n  //   if (result.status === 'error') {\r\n  //     // 上报接口错误\r\n  //     transportData.send({ ...result, type, status: STATUS_CODE.ERROR });\r\n  //   }\r\n  // },\r\n  // handleError(ev: ErrorTarget): void {\r\n  //   const target = ev.target;\r\n  //   if (!target || (ev.target && !ev.target.localName)) {\r\n  //     // vue和react捕获的报错使用ev解析，异步错误使用ev.error解析\r\n  //     const stackFrame = ErrorStackParser.parse(!target ? ev : ev.error)[0];\r\n  //     const { fileName, columnNumber, lineNumber } = stackFrame;\r\n  //     const errorData = {\r\n  //       type: EVENTTYPES.ERROR,\r\n  //       status: STATUS_CODE.ERROR,\r\n  //       time: getTimestamp(),\r\n  //       message: ev.message,\r\n  //       fileName,\r\n  //       line: lineNumber,\r\n  //       column: columnNumber,\r\n  //     };\r\n  //     breadcrumb.push({\r\n  //       type: EVENTTYPES.ERROR,\r\n  //       category: breadcrumb.getCategory(EVENTTYPES.ERROR),\r\n  //       data: errorData,\r\n  //       time: getTimestamp(),\r\n  //       status: STATUS_CODE.ERROR,\r\n  //     });\r\n  //     const hash: string = getErrorUid(\r\n  //       `${EVENTTYPES.ERROR}-${ev.message}-${fileName}-${columnNumber}`\r\n  //     );\r\n  //     // 开启repeatCodeError第一次报错才上报\r\n  //     if (!options.repeatCodeError || (options.repeatCodeError && !hashMapExist(hash))) {\r\n  //       return transportData.send(errorData);\r\n  //     }\r\n  //   }\r\n\r\n  //   // 资源加载报错\r\n  //   if (target?.localName) {\r\n  //     // 提取资源加载的信息\r\n  //     const data = resourceTransform(target);\r\n  //     breadcrumb.push({\r\n  //       type: EVENTTYPES.RESOURCE,\r\n  //       category: breadcrumb.getCategory(EVENTTYPES.RESOURCE),\r\n  //       status: STATUS_CODE.ERROR,\r\n  //       time: getTimestamp(),\r\n  //       data,\r\n  //     });\r\n  //     return transportData.send({\r\n  //       ...data,\r\n  //       type: EVENTTYPES.RESOURCE,\r\n  //       status: STATUS_CODE.ERROR,\r\n  //     });\r\n  //   }\r\n  // },\r\n  // handleHistory(data: RouteHistory): void {\r\n  //   const { from, to } = data;\r\n  //   // 定义parsedFrom变量，值为relative\r\n  //   const { relative: parsedFrom } = parseUrlToObj(from);\r\n  //   const { relative: parsedTo } = parseUrlToObj(to);\r\n  //   breadcrumb.push({\r\n  //     type: EVENTTYPES.HISTORY,\r\n  //     category: breadcrumb.getCategory(EVENTTYPES.HISTORY),\r\n  //     data: {\r\n  //       from: parsedFrom ? parsedFrom : '/',\r\n  //       to: parsedTo ? parsedTo : '/',\r\n  //     },\r\n  //     time: getTimestamp(),\r\n  //     status: STATUS_CODE.OK,\r\n  //   });\r\n  // },\r\n  // handleHashchange(data: HashChangeEvent): void {\r\n  //   const { oldURL, newURL } = data;\r\n  //   const { relative: from } = parseUrlToObj(oldURL);\r\n  //   const { relative: to } = parseUrlToObj(newURL);\r\n  //   breadcrumb.push({\r\n  //     type: EVENTTYPES.HASHCHANGE,\r\n  //     category: breadcrumb.getCategory(EVENTTYPES.HASHCHANGE),\r\n  //     data: {\r\n  //       from,\r\n  //       to,\r\n  //     },\r\n  //     time: getTimestamp(),\r\n  //     status: STATUS_CODE.OK,\r\n  //   });\r\n  // },\r\n  // handleUnhandleRejection(ev: PromiseRejectionEvent): void {\r\n  //   const stackFrame = ErrorStackParser.parse(ev.reason)[0];\r\n  //   const { fileName, columnNumber, lineNumber } = stackFrame;\r\n  //   const message = unknownToString(ev.reason.message || ev.reason.stack);\r\n  //   const data = {\r\n  //     type: EVENTTYPES.UNHANDLEDREJECTION,\r\n  //     status: STATUS_CODE.ERROR,\r\n  //     time: getTimestamp(),\r\n  //     message,\r\n  //     fileName,\r\n  //     line: lineNumber,\r\n  //     column: columnNumber,\r\n  //   };\r\n\r\n  //   breadcrumb.push({\r\n  //     type: EVENTTYPES.UNHANDLEDREJECTION,\r\n  //     category: breadcrumb.getCategory(EVENTTYPES.UNHANDLEDREJECTION),\r\n  //     time: getTimestamp(),\r\n  //     status: STATUS_CODE.ERROR,\r\n  //     data,\r\n  //   });\r\n  //   const hash: string = getErrorUid(\r\n  //     `${EVENTTYPES.UNHANDLEDREJECTION}-${message}-${fileName}-${columnNumber}`\r\n  //   );\r\n  //   // 开启repeatCodeError第一次报错才上报\r\n  //   if (!options.repeatCodeError || (options.repeatCodeError && !hashMapExist(hash))) {\r\n  //     transportData.send(data);\r\n  //   }\r\n  // },\r\n  handleWhiteScreen(): void {\r\n    openWhiteScreen((res: any) => {\r\n      // 上报白屏检测信息\r\n      console.log(\"上报白屏异常信息\");\r\n      console.log(res);\r\n      transportData.send({\r\n        type: EVENTTYPES.WHITESCREEN,\r\n        time: getTimestamp(),\r\n        ...res,\r\n      });\r\n    }, options);\r\n  },\r\n};\r\nexport { HandleEvents };\r\n","import { notify, subscribeEvent } from './index';\r\nimport {\r\n  _global,\r\n} from '@chuche-monitor/utils';\r\nimport { EVENTTYPES } from '@chuche-monitor/common';\r\nimport { ReplaceHandler } from '@chuche-monitor/types';\r\n\r\nfunction replace(type: EVENTTYPES): void {\r\n  switch (type) {\r\n    case EVENTTYPES.WHITESCREEN:\r\n      whiteScreen();\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\nexport function addReplaceHandler(handler: ReplaceHandler): void {\r\n  if (!subscribeEvent(handler)) return;\r\n  replace(handler.type);\r\n}\r\n\r\nfunction whiteScreen(): void {\r\n  notify(EVENTTYPES.WHITESCREEN);\r\n}\r\n","import { HandleEvents } from './handleEvents';\r\n// import { breadcrumb } from './index';\r\nimport { addReplaceHandler } from './replace';\r\nimport { EVENTTYPES } from '@chuche-monitor/common';\r\nexport function setupReplace(): void {\r\n  // 白屏检测\r\n  addReplaceHandler({\r\n    callback: () => {\r\n      HandleEvents.handleWhiteScreen();\r\n    },\r\n    type: EVENTTYPES.WHITESCREEN,\r\n  });\r\n}\r\n","import { getFlag, setFlag, nativeTryCatch } from '@chuche-monitor/utils';\r\nimport { SDK_VERSION, SDK_NAME, EVENTTYPES } from '@chuche-monitor/common';\r\nimport { InitOptions, VueInstance, ViewModel } from '@chuche-monitor/types';\r\n\r\nimport {\r\n    subscribeEvent,\r\n    notify,\r\n    transportData,\r\n    options,\r\n    handleOptions,\r\n    log,\r\n    setupReplace,\r\n    // HandleEvents,\r\n} from './core/index';\r\n\r\nfunction init(options: InitOptions) {\r\n    if (!options.dsn || !options.apikey) {\r\n        return console.error(`web-see 缺少必须配置项：${!options.dsn ? 'dsn' : 'apikey'} `);\r\n    }\r\n    // if (!('fetch' in _global) || options.disabled) return;\r\n    // 初始化配置\r\n    handleOptions(options);\r\n    setupReplace();\r\n}\r\n\r\nfunction install(Vue: VueInstance, options: InitOptions) {\r\n    if (getFlag(EVENTTYPES.VUE)) return;\r\n    setFlag(EVENTTYPES.VUE, true);\r\n    const handler = Vue.config.errorHandler;\r\n    console.log('运行了core的注册，install方法');\r\n    // vue项目在Vue.config.errorHandler中上报错误, 重写了vue项目的报错方式\r\n    Vue.config.errorHandler = function (err: Error, vm: ViewModel, info: string): void {\r\n        console.log('重写vue项目的报错');\r\n        console.log(err);\r\n        // HandleEvents.handleError(err);\r\n        if (handler) handler.apply(null, [err, vm, info]);\r\n    };\r\n    init(options);\r\n}\r\n\r\n// react项目在ErrorBoundary中上报错误\r\nfunction errorBoundary(err: Error): void {\r\n    if (getFlag(EVENTTYPES.REACT)) return;\r\n    setFlag(EVENTTYPES.REACT, true);\r\n    // HandleEvents.handleError(err);\r\n    console.log(err);\r\n}\r\n\r\nfunction use(plugin: any, option: any) {\r\n    const instance = new plugin(option);\r\n    if (\r\n        !subscribeEvent({\r\n            callback: data => {\r\n                instance.transform(data);\r\n            },\r\n            type: instance.type,\r\n        })\r\n    )\r\n        return;\r\n\r\n    nativeTryCatch(() => {\r\n        // instance.core({ transportData, breadcrumb, options, notify }); // 这里应该就是插件的加载\r\n        instance.core({ transportData, undefined, options, notify });\r\n        // 这里应该就是插件的加载,这里就是在运行插件的核心方法。上报性能数据了。后面的notify其实没有用到，只用到了transportdata\r\n    });\r\n}\r\n\r\nexport default {\r\n    SDK_VERSION,\r\n    SDK_NAME,\r\n    init,\r\n    install,\r\n    errorBoundary,\r\n    use,\r\n    log,\r\n}"],"names":["version","ErrorStackParser"],"mappings":"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"}