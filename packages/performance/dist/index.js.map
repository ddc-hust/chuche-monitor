{"version":3,"file":"index.js","sources":["../../types/src/core/base.ts","../../common/src/core/constant.ts","../src/core/performance.ts","../../utils/src/core/helpers.ts","../../utils/src/core/global.ts","../src/index.ts"],"sourcesContent":["import { EVENTTYPES } from '@chuche-monitor/common';\r\nexport interface Callback { // 这里定义了一个函数类型，参数是任意数量任意类型的，返回值也是任意类型\r\n    (...args: any[]): any;\r\n}\r\n\r\n// sdk插件核心core\r\nexport interface SdkBase {\r\n    transportData: any; // 数据上报\r\n    breadcrumb: any; // 用户行为\r\n    options: any; // 公共配置\r\n    notify: any; // 发布消息\r\n}\r\n\r\nexport abstract class BasePlugin {\r\n    public type: string; // 插件类型\r\n    constructor(type: string) {\r\n        this.type = type;\r\n    }\r\n    abstract bindOptions(options: object): void; // 校验参数\r\n    abstract core(sdkBase: SdkBase): void; // 核心方法\r\n    abstract transform(data: any): void; // 数据转化\r\n}\r\n\r\nexport interface Window {\r\n    chrome: {\r\n        app: {\r\n            [key: string]: any;\r\n        };\r\n    };\r\n    history: any;\r\n    addEventListener: any;\r\n    innerWidth: any;\r\n    innerHeight: any;\r\n    onpopstate: any;\r\n    performance: any;\r\n    __chucheMonitor__: { // 不知道这个webSee是干嘛的，改成chuche-montiro?\r\n        [key: string]: any;\r\n    };\r\n}\r\n\r\nexport interface ChucheMonitor {\r\n    hasError: false; // 某段时间代码是否报错\r\n    events: string[]; // 存储录屏的信息\r\n    recordScreenId: string; // 本次录屏的id\r\n    _loopTimer: number; // 白屏循环检测的timer\r\n    transportData: any; // 数据上报\r\n    options: any; // 配置信息\r\n    replaceFlag: {\r\n        // 订阅消息\r\n        [key: string]: any;\r\n    };\r\n    deviceInfo: {\r\n        // 设备信息\r\n        [key: string]: any;\r\n    };\r\n}\r\n\r\n/**\r\n * 性能指标\r\n */\r\nexport interface PerformanceData {\r\n    name: string; // FCP\r\n    value: number; // 数值\r\n    rating: string; // 等级\r\n}\r\n\r\n/**\r\n * 上报的数据接口\r\n */\r\nexport interface ReportData\r\n    extends\r\n    PerformanceData {\r\n    type: string; // 事件类型\r\n    pageUrl: string; // 页面地址\r\n    time: number; // 发生时间\r\n    uuid: string; // 页面唯一标识\r\n    apikey: string; // 项目id\r\n    status: string; // 事件状态\r\n    sdkVersion: string; // 版本信息\r\n    //  breadcrumb?: BreadcrumbData[]; // 用户行为\r\n\r\n    // 设备信息\r\n    deviceInfo: {\r\n        browserVersion: string | number; // 版本号\r\n        browser: string; // Chrome\r\n        osVersion: string | number; // 电脑系统 10\r\n        os: string; // 设备系统\r\n        ua: string; // 设备详情\r\n        device: string; // 设备种类描述\r\n        device_type: string; // 设备种类，如pc\r\n    };\r\n}\r\n\r\n\r\nexport interface IAnyObject {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type voidFun = (...args: any[]) => void;\r\n\r\nexport interface ReplaceHandler {\r\n    type: EVENTTYPES;\r\n    callback: Callback;\r\n}\r\n\r\nexport type ReplaceCallback = (data: any) => void;","/**\r\n * 事件类型, 设置为枚举类型\r\n */\r\nexport enum EVENTTYPES {\r\n    PERFORMANCE = 'performance',\r\n    WHITESCREEN = 'whiteScreen',\r\n    VUE = 'vue',\r\n    REACT = 'react', // 事件类型中不知道为什么会有react和vue的区别\r\n\r\n    XHR = 'xhr',\r\n    FETCH = 'fetch',\r\n    CLICK = 'click',\r\n    HISTORY = 'history',\r\n    ERROR = 'error',\r\n    HASHCHANGE = 'hashchange',\r\n    UNHANDLEDREJECTION = 'unhandledrejection',\r\n    RESOURCE = 'resource',\r\n    DOM = 'dom',\r\n    CUSTOM = 'custom',\r\n    RECORDSCREEN = 'recordScreen',\r\n}\r\n\r\n/**\r\n * 状态， 设置为枚举类型\r\n */\r\nexport enum STATUS_CODE {\r\n    ERROR = 'error',\r\n    OK = 'ok',\r\n}","import { Callback } from '@chuche-monitor/types';\r\n\r\nexport function getFCP(callback: Callback): void { // 参数是一个函数，获取到数据后，调用这个函数，这个函数的参数是一个数据对象\r\n    const entryHandler = (list: any) => {\r\n        for (const entry of list.getEntries()) {\r\n            if (entry.name === 'first-contentful-paint') {\r\n                observer.disconnect();\r\n                callback({\r\n                    name: 'FCP',\r\n                    value: entry.startTime,\r\n                    rating: entry.startTime > 2500 ? 'poor' : 'good',\r\n                });\r\n            }\r\n        }\r\n    };\r\n    const observer = new PerformanceObserver(entryHandler);\r\n    observer.observe({ type: 'paint', buffered: true });\r\n}","import { variableTypeDetection } from './verifyType';\r\n// 获取当前的时间戳\r\nexport function getTimestamp(): number {\r\n    return Date.now();\r\n}\r\n\r\nexport function typeofAny(target: any): string { // 类型的获取，切割8到-1是因为，获取的字符串是\"[object \" 和 \"]\"这种形式的\r\n    return Object.prototype.toString.call(target).slice(8, -1).toLowerCase();\r\n}\r\n\r\n// 验证选项的类型\r\nexport function validateOption(target: any, targetName: string, expectType: string): any {\r\n    if (!target) return false;\r\n    if (typeofAny(target) === expectType) return true;\r\n    console.error(`web-see: ${targetName}期望传入${expectType}类型，目前是${typeofAny(target)}类型`);\r\n}\r\n\r\nexport function generateUUID(): string {\r\n    let d = new Date().getTime();\r\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getLocationHref(): string {\r\n    if (typeof document === 'undefined' || document.location == null) return '';\r\n    return document.location.href;\r\n}\r\n\r\nexport function unknownToString(target: unknown): string {\r\n    if (variableTypeDetection.isString(target)) {\r\n        return target as string;\r\n    }\r\n    if (variableTypeDetection.isUndefined(target)) {\r\n        return 'undefined';\r\n    }\r\n    return JSON.stringify(target);\r\n}","import { ChucheMonitor, Window } from '@chuche-monitor/types';\r\n\r\n\r\n// 获取全局变量\r\nexport function getGlobal(): Window {\r\n    return window as unknown as Window;\r\n}\r\n\r\nconst _global = getGlobal();\r\nconst _support = getGlobalSupport();\r\n\r\n_support.replaceFlag = _support.replaceFlag || {};\r\nconst replaceFlag = _support.replaceFlag;\r\n\r\nexport function setFlag(replaceType: string, isSet: boolean) { // 这个replaceType不知道是什么？，好像是事件类型\r\n    if (replaceFlag[replaceType]) return;\r\n    replaceFlag[replaceType] = isSet;\r\n}\r\nexport function getFlag(replaceType: string) {\r\n    return replaceFlag[replaceType] ? true : false;\r\n}\r\n\r\n// 获取全部变量__webSee__的引用地址，这是干啥的？？？\r\nexport function getGlobalSupport() {\r\n    _global.__chucheMonitor__ = _global.__chucheMonitor__ || ({} as ChucheMonitor);\r\n    return _global.__chucheMonitor__;\r\n}\r\nexport { _global, _support };","import { SdkBase, BasePlugin } from '@chuche-monitor/types';\r\nimport { EVENTTYPES, STATUS_CODE } from '@chuche-monitor/common';\r\nimport { getFCP } from './core/performance';\r\nimport { getTimestamp, _global } from '@chuche-monitor/utils';\r\n\r\nexport default class WebPerformance extends BasePlugin {\r\n    type: string;\r\n    constructor() {\r\n        super(EVENTTYPES.PERFORMANCE);\r\n        this.type = EVENTTYPES.PERFORMANCE;\r\n    }\r\n    bindOptions() { }\r\n    core({ transportData }: SdkBase): void {  // 核心方法\r\n        console.log(\"运行了性能插件\");\r\n        // 获取FCP、LCP、TTFB、FID等指标\r\n        getFCP((res: any) => {  // 在参数中就可以获取到监测的数据\r\n            // name指标名称、rating 评级、value数值\r\n            const { name, rating, value } = res;\r\n            console.log(\"FCP数据的获取\");\r\n            transportData.send({  // 不知道这个transportData的send函数是在哪里定义的\r\n                type: EVENTTYPES.PERFORMANCE,\r\n                status: STATUS_CODE.OK,\r\n                time: getTimestamp(),\r\n                name,\r\n                rating,\r\n                value,\r\n            });\r\n        });\r\n    }\r\n    transform() { }\r\n\r\n}"],"names":[],"mappings":"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"}