{"version":3,"file":"index.js","sources":["../src/core/verifyType.ts","../src/core/helpers.ts","../src/core/global.ts","../../common/src/core/constant.ts","../src/core/browser.ts","../src/core/queue.ts","../src/core/exception.ts"],"sourcesContent":["function isType(type: any) {\r\n  return function (value: any): boolean {\r\n    return Object.prototype.toString.call(value) === `[object ${type}]`;\r\n  };\r\n}\r\n/**\r\n * 检测变量类型\r\n * @param type\r\n */\r\nexport const variableTypeDetection = {\r\n  isNumber: isType('Number'),\r\n  isString: isType('String'),\r\n  isBoolean: isType('Boolean'),\r\n  isNull: isType('Null'),\r\n  isUndefined: isType('Undefined'),\r\n  isSymbol: isType('Symbol'),\r\n  isFunction: isType('Function'),\r\n  isObject: isType('Object'),\r\n  isArray: isType('Array'),\r\n  isProcess: isType('process'),\r\n  isWindow: isType('Window'),\r\n};\r\n\r\nexport function isError(error: Error): boolean {\r\n  switch (Object.prototype.toString.call(error)) {\r\n    case '[object Error]':\r\n      return true;\r\n    case '[object Exception]':\r\n      return true;\r\n    case '[object DOMException]':\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n/**\r\n * 检查是否是空对象\r\n */\r\nexport function isEmptyObject(obj: object): boolean {\r\n  return variableTypeDetection.isObject(obj) && Object.keys(obj).length === 0;\r\n}\r\nexport function isEmpty(wat: any): boolean {\r\n  return (\r\n    (variableTypeDetection.isString(wat) && wat.trim() === '') || wat === undefined || wat === null\r\n  );\r\n}\r\n\r\nexport function isExistProperty(obj: any, key: any): boolean {\r\n  return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n","import { variableTypeDetection } from './verifyType';\r\n// 获取当前的时间戳\r\nexport function getTimestamp(): number {\r\n    return Date.now();\r\n}\r\n\r\nexport function typeofAny(target: any): string { // 类型的获取，切割8到-1是因为，获取的字符串是\"[object \" 和 \"]\"这种形式的\r\n    return Object.prototype.toString.call(target).slice(8, -1).toLowerCase();\r\n}\r\n\r\n// 验证选项的类型\r\nexport function validateOption(target: any, targetName: string, expectType: string): any {\r\n    if (!target) return false;\r\n    if (typeofAny(target) === expectType) return true;\r\n    console.error(`web-see: ${targetName}期望传入${expectType}类型，目前是${typeofAny(target)}类型`);\r\n}\r\n\r\nexport function generateUUID(): string {\r\n    let d = new Date().getTime();\r\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getLocationHref(): string {\r\n    if (typeof document === 'undefined' || document.location == null) return '';\r\n    return document.location.href;\r\n}\r\n\r\nexport function unknownToString(target: unknown): string {\r\n    if (variableTypeDetection.isString(target)) {\r\n        return target as string;\r\n    }\r\n    if (variableTypeDetection.isUndefined(target)) {\r\n        return 'undefined';\r\n    }\r\n    return JSON.stringify(target);\r\n}","import { ChucheMonitor, Window } from '@chuche-monitor/types';\r\n\r\n\r\n// 获取全局变量\r\nexport function getGlobal(): Window {\r\n    return window as unknown as Window;\r\n}\r\n\r\nconst _global = getGlobal();\r\nconst _support = getGlobalSupport();\r\n\r\n_support.replaceFlag = _support.replaceFlag || {};\r\nconst replaceFlag = _support.replaceFlag;\r\n\r\nexport function setFlag(replaceType: string, isSet: boolean) { // 这个replaceType不知道是什么？，好像是事件类型\r\n    if (replaceFlag[replaceType]) return;\r\n    replaceFlag[replaceType] = isSet;\r\n}\r\nexport function getFlag(replaceType: string) {\r\n    return replaceFlag[replaceType] ? true : false;\r\n}\r\n\r\n// 获取全部变量__webSee__的引用地址，这是干啥的？？？\r\nexport function getGlobalSupport() {\r\n    _global.__chucheMonitor__ = _global.__chucheMonitor__ || ({} as ChucheMonitor);\r\n    return _global.__chucheMonitor__;\r\n}\r\nexport { _global, _support };","/**\r\n * 事件类型, 设置为枚举类型\r\n */\r\nexport enum EVENTTYPES {\r\n    PERFORMANCE = 'performance',\r\n    WHITESCREEN = 'whiteScreen',\r\n    VUE = 'vue',\r\n    REACT = 'react', // 事件类型中不知道为什么会有react和vue的区别\r\n\r\n    XHR = 'xhr',\r\n    FETCH = 'fetch',\r\n    CLICK = 'click',\r\n    HISTORY = 'history',\r\n    ERROR = 'error',\r\n    HASHCHANGE = 'hashchange',\r\n    UNHANDLEDREJECTION = 'unhandledrejection',\r\n    RESOURCE = 'resource',\r\n    DOM = 'dom',\r\n    CUSTOM = 'custom',\r\n    RECORDSCREEN = 'recordScreen',\r\n}\r\n\r\n/**\r\n * 状态， 设置为枚举类型\r\n */\r\nexport enum STATUS_CODE {\r\n    ERROR = 'error',\r\n    OK = 'ok',\r\n}","import { setFlag, _support } from './global';\r\nimport { EVENTTYPES } from '@chuche-monitor/common';\r\n\r\nexport function setSilentFlag({\r\n    silentXhr = true,\r\n    silentFetch = true,\r\n    silentClick = true,\r\n    silentHistory = true,\r\n    silentError = true,\r\n    silentHashchange = true,\r\n    silentUnhandledrejection = true,\r\n    silentWhiteScreen = false,\r\n}): void {\r\n    setFlag(EVENTTYPES.XHR, !silentXhr);\r\n    setFlag(EVENTTYPES.FETCH, !silentFetch);\r\n    setFlag(EVENTTYPES.CLICK, !silentClick);\r\n    setFlag(EVENTTYPES.HISTORY, !silentHistory);\r\n    setFlag(EVENTTYPES.ERROR, !silentError);\r\n    setFlag(EVENTTYPES.HASHCHANGE, !silentHashchange);\r\n    setFlag(EVENTTYPES.UNHANDLEDREJECTION, !silentUnhandledrejection);\r\n    setFlag(EVENTTYPES.WHITESCREEN, !silentWhiteScreen);\r\n}","import { _global } from './global';\r\nimport { voidFun } from '@chuche-monitor/types';\r\n\r\nexport class Queue {\r\n    private stack: any[] = [];\r\n    private isFlushing = false;\r\n    constructor() { }\r\n    addFn(fn: voidFun): void {\r\n        if (typeof fn !== 'function') return;\r\n        if (!('requestIdleCallback' in _global || 'Promise' in _global)) {\r\n            fn();\r\n            return;\r\n        }\r\n        this.stack.push(fn);\r\n        if (!this.isFlushing) {\r\n            this.isFlushing = true;\r\n            // 优先使用requestIdleCallback\r\n            if ('requestIdleCallback' in _global) {\r\n                requestIdleCallback(() => this.flushStack());\r\n            } else {\r\n                // 其次使用微任务上报\r\n                Promise.resolve().then(() => this.flushStack());\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        this.stack = [];\r\n    }\r\n    getStack() {\r\n        return this.stack;\r\n    }\r\n    flushStack(): void {\r\n        const temp = this.stack.slice(0);\r\n        this.stack = [];\r\n        this.isFlushing = false;\r\n        for (let i = 0; i < temp.length; i++) {\r\n            temp[i]();\r\n        }\r\n    }\r\n}\r\n","/**\r\n * 原生try函数\r\n * ../param fn try中执行的函数体\r\n * ../param errorFn 报错时执行的函数体，将err传入\r\n */\r\nexport function nativeTryCatch(fn: any, errorFn?: any): void {\r\n  try {\r\n    fn();\r\n  } catch (err) {\r\n    if (errorFn) {\r\n      errorFn(err);\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}